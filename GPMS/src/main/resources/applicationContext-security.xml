<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security.xsd">
 	<!-- 不要过滤图片等静态资源，其中**代表可以跨越目录，*不可以跨越目录。 -->
	<http pattern="/js/**" security="none" />
	<http pattern="/css/**" security="none" />
	<http pattern="/images/**" security="none" />
	<http pattern="/html/**" security="none" />
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.html" security="none" />
	<http pattern="/**/*.htm" security="none" />
	<http pattern="/**/*.mp3" security="none" />
	<http pattern="/login*" security="none" />
	<http pattern="/**/login" security="none" />
	<http pattern="/**/login.jsp*" security="none" />
	<http pattern="/sessionout" security="none" />
	<http pattern="/index" security="none" />
	<http pattern="/" security="none" />
	
	<http auto-config="true">
	    <intercept-url pattern="/home*" access="IS_AUTHENTICATED_FULLY" />
	    <intercept-url pattern="/logintwice*" access="IS_AUTHENTICATED_FULLY" />
		<form-login login-page='/jsp/login.jsp' default-target-url='/home' always-use-default-target='true'
		 authentication-failure-handler-ref="authenticationFailureHandler"/>
		<logout invalidate-session="true" logout-success-url="/jsp/login.jsp" delete-cookies="JSESSIONID" />
		<access-denied-handler error-page="/error/err403" />
		 <!-- 会话管理，设置最多登录异常，error-if-maximum-exceeded = false为第二次登录就会使前一个登录失效 -->
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/logintwice" error-if-maximum-exceeded="false" />
		</session-management>
		<!--增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了， 这个filter位于最后 -->
		<custom-filter  ref="permissionFilterSecurityInterceptor" after="LAST" />
	</http>
	
	<!-- 认证失败处理 -->
	<beans:bean id="authenticationFailureHandler" class="cn.edu.ecit.cl.wang.sys.security.MyAuthenticationFailureHandler">
  		<beans:property name="defaultFailureUrl" value="/login?error=true"/>  
  	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider"/>
	</authentication-manager>
	
	<beans:bean id="authenticationProvider"  class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">  
	    <beans:property name="userDetailsService" ref="myUserDetailService" />
	    <!-- 显示错误的详细信息 -->
	    <beans:property name="hideUserNotFoundExceptions" value="false" />  
	    <beans:property name="passwordEncoder" ref="passwordEncode"/>
	</beans:bean> 
	
	<!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
	<beans:bean id="myUserDetailService" class="cn.edu.ecit.cl.wang.sys.security.MyUserDetailService" />
	<!-- 配置密码加密类 -->
    <beans:bean id="passwordEncode" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	
	<!--一个是否允许通过的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性 -->
	<beans:bean id="permissionFilterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<!-- 拒绝公共的没有指定角色资源的调用 -->
		<beans:property name="rejectPublicInvocations" value="false"/>
		<beans:property name="observeOncePerRequest" value="false" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
	</beans:bean>

	<!--访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManagerBean" class="cn.edu.ecit.cl.wang.sys.security.MyAccessDecisionManager" />
	<!--资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource" class="cn.edu.ecit.cl.wang.sys.security.MyInvocationSecurityMetadataSource" />

	<beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener" />

	<!-- 验证码Jcaptcha相关的配置 <beans:bean id="captchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService"> 
		<beans:property name="captchaEngine"> <beans:bean class="sunyard.web.frame.jcaptcha.JcaptchaEngine" 
		/> </beans:property> 默认生成的图片180秒过期 , 可另行设置 <property name="minGuarantedStorageDelayInSeconds" 
		value="180" /> </beans:bean> -->
</beans:beans>